* Vim学习流程笔记

目前属于捡回vim阶段,之前有过一个vim的环境,所以准备重新开始接触它
+ 用于ndSim的相关研究

** 1. 整理Vim的环境

*** 1.1 更新Vim

现在Linux上的版本为7.4,想查看是否有更新 据说是更新到8.0了
但是太新的东西对于不了解的时候反而找不到相关资料,当前状态就好

+ 自编译Vim8
  + 删除vim
    - ~dpkg -l | grep vim~ : 查看所有的安装包
    - ~sudo apt-get remove vim-~ : 删除相关应用
    - ~sudo dpkg -P vim-~ : 清理相关残留
    - [[https://blog.csdn.net/a464057216/article/details/52821171][参考地址]]
    - https://linux.cn/article-8094-1.html
    - 在make设置之后,选择使用make install或者checkinstall其中的一个进行安装就可以了,不用两个都用
  + 下载vimneovim源码 ~git clone https://github.com/vim/vim.git~
  + 编译源码

*** 1.2 Vim环境设置

+ ~/.vimrc :: 当前用户的配置文件
  + 基础语法
    + " 开头表示注释
https://linux.cn/article-8094-1.html

** 2. vimtutor

开始学习官方教程
[[https://github.com/wsdjeg/vim-galore-zh_cn][Vim从入门到精通]] 

*** 2.1 vimtutor
    
+ ~vimtutor~ 进入教程
  + 进入与退出
    + ~:q!~ :: 不保存退出
  + 删除
    + x :: 删除当前字符
    + d :: 表示删除操作
  + 移动
    + h,j,k,l :: 移动
    + 0,$ :: 行首,行尾
    + e :: 单词尾部
    + w :: 下一个单词首部
  + 撤销
    + u :: 撤销
    + U :: 撤销整行的操作
    + Ctrl-R :: 像是undo,撤销u的操作
  + 插入
    + o/O :: 在下一行/上一行插入
    + A :: 在行尾插入
    + a :: 在光标后面插入
    + i :: 在光标前面插入
  + 置入
    + p :: 将删除的元素放在光标后面
      + 整行时放在下一行,单个字符放在下一个字符的位置
    + r :: 替换当前字符
    + R :: 连续替换多个字符
    + cw ce :: 删除单词并进入插入模式
      + 奇怪,两个命令的结果都一样
    + ~:s/thee/the~ :: 替换当前行的第一个匹配
    + ~:s/thee/the/g~ :: 替换当前行所有的匹配
    + ~:10,20s/thee/the/gc~ :: 替换10到20行所有的匹配,每次需要替换时进行询问
    + ~:%s/thee/the/g~ :: 替换整个文件
  + 定位
    + G :: number G 表示跳转到这一行
    + ctrl-g :: 显示行数状态
    + ctrl-o :: 跳转到之前的位置
    + ctrl-i :: 跳转到之前较新的位置
  + 搜索
    - / + 搜索字符 :: 搜索某个字符
    - n :: 搜索下一个
    - N :: 搜索上一个
    - ? + 搜索字符 :: 反向搜索
    - % :: 查找配对的括号--感觉没啥用
    - ~:set ic~ :: 查找时忽略大小写
    - ~:set noic~ :: 不忽略大小写
    - ~:set hls is~ :: 高亮查询结果
    - ~:nohlsearch~ :: 取消高亮
  + 执行外部命令
    + ~:!ls~ :: 查看当前目录
    + ~:w test.txt~ :: 将当前内容保存到 test.txt
    + ~:r FILENAME~ :: 在当前文件中插入选择的文件
  + 选择
    + v :: 进入可视模式
      + 按 ~:~ 对选中部分进行操作
  + 复制
    + y :: 复制选中部分
    + p :: 粘贴


* vim入门到入土

** 1. 入门

*** 1.1 vimtutor

*** 1.2 精简的vimrc
