* Shell编程

** 1、编辑器

1. 主要用bash `#!/bin/bash`
2. 执行shell
   1. `chmod 755 hello.sh`

** 2、例子

1. 打印时间
   + echo time

** TODO [0/1] 3、bash常见功能       :四大文件 

1. [ ] 默认保存1000条历史记录 [0/1]
   1. [ ] /etc/profile中的HISTSIZE进行修改  
      1. 修改为10000即可，保存在文件中，所以可以不用太在意大小
      2. 命令是在退出后进行保存的
   2. `history`查看历史命令
      1. `history -w` 写入
      2. `history -c` 清除
   3. `!n` 重复第n条命令
      1. `!str` 执行以str开头的最后一个

2. 别名 alisas

   1. `alias`   查看别名，后面加设定可以进行设置

   2. `~/.bashrc`中可以进行修改

   3. `alias rm="rm -i"` -i表示询问

3. 输入输出重定向

   1. 输入:用的不多

   2. 输出：

      1. `>`  覆盖

         1. `pwd > aa` 将当前路径覆盖到aa文件中

      2. `>>` 追加

      3. 错误输出并不会被写入到文件中

         1. 错误输出需要使用`ls asd 2>> aa`

         2. 输出所有使用`ls aws &>> a`追加（早期bash无法使用）,或者`ls aws &> aa`覆盖

            1. 较为有用的是

               1. `ls >>success 2>> error` 将正确结果与错误结果拆分开来

               2. `ls >> aa 2>&1` 将错误结果重定向到aa中，可追加

   3. `pwd` 表示当前路径,`ls >> aa`执行结果中，aa中包含aa这个名字，也就是aa文件先被创建了

4. 多命令顺序执行

   1. `ls ; ls ; pwd`  顺序执行

   2. `ls && pwd` 忘记叫什么了，反正当第一个错误的时候，后面的就不需要验证了

   3. `ls || pwd` 当第一个正确时后面的就不需要执行了

   4. `ls aa && echo "success" || echo "error"` 格式

5. 管道符

   1. 第一条命令的结果作为第二条命令的输入

   2. `ls -l /etc/ | more` 分页显示

   3. `netstat -tuln | grep 80` grep -c 查看文件中的内容

      1. net stat t-tcp,u-udp,l-listen,n-端口




** 4、变量

1. 分类
   1. 本地变量
   2. 环境变量
   3. 位置参数
   4. 预定义变量
2. 本地变量
   1. 声明时直接使用 `aa=123`
   2. 使用的时候需要加$ `echo $aa`
   3. 有空格的时候需要""括起来
   4. ''括起来可以不进行转义'hi $aa' -> hi $aa 而不是hi 123
   5. 反引号括起来的可以作为命令存入变量 cc=`ls`或cc=$(ls) echo $cc
3. 环境变量
   1. `set` 查看变量，包括环境变量与本地符号
   2. `unset` 删除变量
   3. 一般为大写
   4. bash可以创建新的bash，通过`pstree`进行查看
   5. `export a=a` 设定环境变量，一般是`export a=$export:a`
   6. `env` 查看环境变量,`echo $PATH`
4. 四大文件
   1. /etc/profile   --root
   2. /etc/bashrc
   3. ~/.bashrc      --user
   4. ~/.bash_profile
