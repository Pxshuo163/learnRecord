* Shell练习
** 练习一
*** 题目
用shell脚本监控进程是否存在 不存在则启动的实例
*** 代码 (<s tab)
#+BEGIN_SRC shell
#!/bin/sh
ps -fe|grep processString |grep -v grep
if[$? -ne 0]
then
    echo "start process..."
else
    echo "runing..."
fi
#+END_SRC

#+BEGIN_SRC shell
while true;do
    count=`ps -ef|grep http|grep -v grep`
    if [ "$?" != "0" ];then
        echo    ">>>>no httpd,run it"
        service httpd start
    else
        echo ">>>>httpd is runing..."
    fi
    sleep 5
done
#+END_SRC

*** 解释
+ -e :: 显示所有程序。
+ -f :: 显示UID,PPIP,C与STIME栏位。
+ grep -v str :: 过滤掉带有str字符
  + PS :: 否则会把你的查询语句也当做进程获取出来
  + 所以要添加 ~grep -v grep~ 来排除本行
+ $? :: 表示上一条命令的结果,在这里表示如果没有找到进程
  + 成功执行返回0,失败返回1
  + 中间不要添加打印等操作,否则判断的是打印的执行结果
+ -ne :: 表示不等于
  + -eq :: 表示等于
+ crontab :: 使用 ~crontab -e~ 修改定时任务文件
  + 用户所建立的crontab文件中，每一行都代表一项任务，每行的每个字段代表一项设置，它的格式共分为六个字段，前五段是时间设定段，第六段是要执行的命令段，格式如下：
  + minute   hour   day   month   week   command     顺序：分 时 日 月 周
    + minute： 表示分钟，可以是从0到59之间的任何整数。
    + hour：表示小时，可以是从0到23之间的任何整数。
    + day：表示日期，可以是从1到31之间的任何整数。
    + month：表示月份，可以是从1到12之间的任何整数。
    + week：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。
    + command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件。
  + 在以上各个字段中，还可以使用以下特殊字符：
    + 星号（*）：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作。
    + 逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”
    + 中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”
    + 正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次。 
+ 题外
  + wc -l :: 统计结果的行数
  + if[ a -eq b ] :: 中括号与表达式之间需要有空格

